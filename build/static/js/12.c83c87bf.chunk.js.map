{"version":3,"sources":["views/admin/user/queryForm.jsx","views/admin/user/index.jsx"],"names":["QueryForm","date_picker","RangePicker","es_select","Option","connect","state","article","getFormMeta","colon","elements","key","label","widget","react_default","a","createElement","input","placeholder","handleSubmit","e","preventDefault","_this","props","form","validateFieldsAndScroll","errors","values","console","log","getQuery","className","es_form","layout","onSubmit","this","FormBuilder","meta","es_button","type","htmlType","Component","queryForm","create","UserManage","list","pagination","loading","getColumns","title","dataIndex","render","text","count","getCommentsCount","badge","style","backgroundColor","sorter","b","comments","moment","createdAt","isBefore","record","onClick","handleDelete","id","username","fetchList","_ref","_ref$current","current","_ref$pageSize","pageSize","query","Object","objectWithoutProperties","setState","axios","get","params","objectSpread","page","then","res","total","rows","userId","modal","confirm","content","concat","onOk","delete","code","message","success","handleChange","_this$state","table","rowKey","bordered","columns","dataSource","onChange"],"mappings":"gXAYMA,GAJcC,EAAA,EAAWC,YAChBC,EAAA,EAAOC,OAErBC,YAAQ,SAAAC,GAAK,OAAIA,EAAMC,uNAMtBC,YAAc,WACZ,MAAO,CACLC,OAAO,EACPC,SAAU,CACR,CACEC,IAAK,WACLC,MAAO,eACPC,OAAQC,EAAAC,EAAAC,cAAAC,EAAA,GAAOC,YAAY,yCAMnCC,aAAe,SAAAC,GACbA,EAAEC,iBACFC,EAAKC,MAAMC,KAAKC,wBAAwB,SAACC,EAAQC,GAC3CD,IACJE,QAAQC,IAAI,gBAAiBF,GAC7BL,EAAKC,MAAMO,SAASH,+EAKtB,OACEb,EAAAC,EAAAC,cAAA,OAAKe,UAAU,cACbjB,EAAAC,EAAAC,cAAAgB,EAAA,GAAMC,OAAO,SAASC,SAAUC,KAAKhB,cACnCL,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAaC,KAAMF,KAAK3B,cAAegB,KAAMW,KAAKZ,MAAMC,MACtDV,EAAAC,EAAAC,cAAAsB,EAAA,GAAQC,KAAK,UAAUC,SAAS,UAAhC,0BAhCYC,kBA0CTC,EAAAV,EAAA,EAAKW,QAAL,CAAc3C,GChDvB4C,6MACJtC,MAAQ,CACNuC,KAAM,GACNC,WAAY,GACZC,SAAS,KAOXC,WAAa,WACX,MAAO,CACL,CACEC,MAAO,qBACPC,UAAW,YAEb,CACED,MAAO,qBACPC,UAAW,WACXC,OAAQ,SAAAC,GACN,IAAMC,EAAQC,YAAiBF,GAC/B,OAAiB,IAAVC,EAAcvC,EAAAC,EAAAC,cAAAuC,EAAA,GAAOF,MAAOA,EAAOG,MAAO,CAAEC,gBAAiB,aAAkBJ,GAExFK,OAAQ,SAAC3C,EAAG4C,GAAJ,OAAUL,YAAiBvC,EAAE6C,UAAYN,YAAiBK,EAAEC,YAEtE,CACEX,MAAO,2BACPC,UAAW,YACXQ,OAAQ,SAAC3C,EAAG4C,GAAJ,OAAWE,IAAO9C,EAAE+C,WAAWC,SAASJ,EAAEG,WAAa,GAAK,IAEtE,CACEb,MAAO,eACPE,OAAQ,SAACC,EAAMY,GAAP,OACNlD,EAAAC,EAAAC,cAAAsB,EAAA,GAAQC,KAAK,SAAS0B,QAAS,kBAAM3C,EAAK4C,aAAaF,EAAOG,GAAIH,EAAOI,YAAzE,sBAQRC,UAAY,SAAAC,GAA8C,IAAAC,EAAAD,EAA3CE,eAA2C,IAAAD,EAAjC,EAAiCA,EAAAE,EAAAH,EAA9BI,gBAA8B,IAAAD,EAAnB,GAAmBA,EAAZE,EAAYC,OAAAC,EAAA,EAAAD,CAAAN,EAAA,wBACxDhD,EAAKwD,SAAS,CAAE/B,SAAS,IACzBzB,EAAKyD,MAAMC,IAAI,oBAAqB,CAAEC,OAAOL,OAAAM,EAAA,EAAAN,CAAA,CAAGO,KAAMX,EAASE,YAAaC,KAAWS,KAAK,SAAAC,GAC1F,IAAMvC,EAAa,CACjB0B,UACAE,WACAY,MAAOD,EAAIhC,OAEb/B,EAAKwD,SAAS,CAAEjC,KAAMwC,EAAIE,KAAMzC,aAAYC,SAAS,SAIzDmB,aAAe,SAACsB,EAAQpB,GACtBqB,EAAA,EAAMC,QAAQ,CACZzC,MAAO,0GACP0C,QAAO,sBAAAC,OAASxB,EAAT,KACPyB,KAAM,WACJvE,EAAKyD,MAAMe,OAAO,eAAgB,CAAEb,OAAQ,CAAEO,YAAYJ,KAAK,SAAAC,GAC5C,MAAbA,EAAIU,OACNzE,EAAK+C,UAAU/C,EAAKhB,MAAMwC,YAC1BkD,EAAA,EAAQC,QAAQZ,EAAIW,kBAO9BE,aAAe,SAAApD,GACbxB,EAAK+C,UAALO,OAAAM,EAAA,EAAAN,CAAA,GAAoB9B,EAAexB,EAAKhB,MAAMqE,WAGhD7C,SAAW,SAAA6C,GACTrD,EAAKwD,SAAS,CAAEH,UAChBrD,EAAK+C,UAALO,OAAAM,EAAA,EAAAN,CAAA,GAAoBD,EAApB,CAA2BH,QAAS,yFAnEpCrC,KAAKkC,UAAU,CAAEc,KAAM,qCAsEhB,IAAAgB,EAC+BhE,KAAK7B,MAAnCuC,EADDsD,EACCtD,KAAMC,EADPqD,EACOrD,WAAYC,EADnBoD,EACmBpD,QAC1B,OACEjC,EAAAC,EAAAC,cAAA,OAAKe,UAAU,IACbjB,EAAAC,EAAAC,cAAC0B,EAAD,CAAWZ,SAAUK,KAAKL,WAC1BhB,EAAAC,EAAAC,cAAAoF,EAAA,GACEC,OAAO,KACPC,UAAQ,EACRC,QAASpE,KAAKa,aACdD,QAASA,EACTyD,WAAY3D,EACZC,WAAYA,EACZ2D,SAAUtE,KAAK+D,uBA1FAzD,aAiGVG","file":"static/js/12.c83c87bf.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { Button, Form, Input, Select, DatePicker } from 'antd'\r\nimport FormBuilder from '@/components/helper/FormBuilder'\r\nimport { connect } from 'react-redux'\r\nimport moment from 'moment'\r\n\r\nconst RangePicker = DatePicker.RangePicker\r\nconst Option = Select.Option\r\n\r\n@connect(state => state.article)\r\nclass QueryForm extends Component {\r\n  static propTypes = {\r\n    getQuery: PropTypes.func.isRequired\r\n  }\r\n\r\n  getFormMeta = () => {\r\n    return {\r\n      colon: true,\r\n      elements: [\r\n        {\r\n          key: 'username',\r\n          label: '姓名',\r\n          widget: <Input placeholder=\"请输入姓名\" />\r\n        }\r\n      ]\r\n    }\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault()\r\n    this.props.form.validateFieldsAndScroll((errors, values) => {\r\n      if (errors) return\r\n      console.log('submit form: ', values)\r\n      this.props.getQuery(values)\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"query-form\">\r\n        <Form layout=\"inline\" onSubmit={this.handleSubmit}>\r\n          <FormBuilder meta={this.getFormMeta()} form={this.props.form}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              检索\r\n            </Button>\r\n          </FormBuilder>\r\n        </Form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form.create()(QueryForm)\r\n","import React, { Component } from 'react'\r\nimport { getCommentsCount } from '@/lib'\r\nimport moment from 'moment'\r\nimport QueryForm from './queryForm'\r\nimport { Table, Button, Modal, message, Badge } from 'antd'\r\n\r\nclass UserManage extends Component {\r\n  state = {\r\n    list: [],\r\n    pagination: {},\r\n    loading: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchList({ page: 1 })\r\n  }\r\n\r\n  getColumns = () => {\r\n    return [\r\n      {\r\n        title: '用户名',\r\n        dataIndex: 'username'\r\n      },\r\n      {\r\n        title: '评论数',\r\n        dataIndex: 'comments',\r\n        render: text => {\r\n          const count = getCommentsCount(text)\r\n          return count !== 0 ? <Badge count={count} style={{ backgroundColor: '#52c41a' }} /> : count\r\n        },\r\n        sorter: (a, b) => getCommentsCount(a.comments) - getCommentsCount(b.comments)\r\n      },\r\n      {\r\n        title: '注册时间',\r\n        dataIndex: 'createdAt',\r\n        sorter: (a, b) => (moment(a.createdAt).isBefore(b.createdAt) ? 1 : -1)\r\n      },\r\n      {\r\n        title: '操作',\r\n        render: (text, record) => (\r\n          <Button type=\"danger\" onClick={() => this.handleDelete(record.id, record.username)}>\r\n            删除\r\n          </Button>\r\n        )\r\n      }\r\n    ]\r\n  }\r\n\r\n  fetchList = ({ current = 1, pageSize = 10, ...query }) => {\r\n    this.setState({ loading: true })\r\n    this.axios.get('/user/getUserList', { params: { page: current, pageSize, ...query } }).then(res => {\r\n      const pagination = {\r\n        current,\r\n        pageSize,\r\n        total: res.count\r\n      }\r\n      this.setState({ list: res.rows, pagination, loading: false })\r\n    })\r\n  }\r\n\r\n  handleDelete = (userId, username) => {\r\n    Modal.confirm({\r\n      title: '您确认删除该用户?，此操作不可恢复！',\r\n      content: `用户： ${username} `,\r\n      onOk: () => {\r\n        this.axios.delete('/user/delete', { params: { userId } }).then(res => {\r\n          if (res.code === 200) {\r\n            this.fetchList(this.state.pagination)\r\n            message.success(res.message)\r\n          }\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  handleChange = pagination => {\r\n    this.fetchList({ ...pagination, ...this.state.query })\r\n  }\r\n\r\n  getQuery = query => {\r\n    this.setState({ query })\r\n    this.fetchList({ ...query, current: 1 })\r\n  }\r\n\r\n  render() {\r\n    const { list, pagination, loading } = this.state\r\n    return (\r\n      <div className=\"\">\r\n        <QueryForm getQuery={this.getQuery} />\r\n        <Table\r\n          rowKey=\"id\"\r\n          bordered\r\n          columns={this.getColumns()}\r\n          loading={loading}\r\n          dataSource={list}\r\n          pagination={pagination}\r\n          onChange={this.handleChange}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default UserManage\r\n"],"sourceRoot":""}