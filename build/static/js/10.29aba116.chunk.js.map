{"version":3,"sources":["views/admin/article/edit/components/SelfCate.jsx","views/admin/article/edit/components/Cate.jsx","views/admin/article/edit/index.jsx"],"names":["SeleCate","state","list","inputVisible","inputValue","handleClose","removedTag","_this","filter","t","setState","showInput","input","focus","handleInputChange","e","target","value","handleInputConfirm","_this$state","CommonlyList","props","includes","concat","Object","toConsumableArray","saveInputRef","_this2","this","_this$state2","react_default","a","createElement","react","map","item","index","isLongTag","length","tagElem","tag","key","closable","afterClose","color","slice","tooltip","title","ref","type","size","style","width","onChange","onBlur","onPressEnter","onClick","background","borderStyle","icon","Component","CheckableTag","SelectCates","connect","store","article","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getCommonlyList","num","arguments","undefined","sort","b","count","d","name","handleSelect","checked","selectList","nextSelectList","getResult","selfList","$selfCateRef","_this$props","showNum","isEdit","onRef","nextProps","_this$props2","className","i","SelfCate","el","defaultProps","Edit","tagList","categoryList","handleSubmit","tags","$tagRef","categories","$categoryRef","params","content","smde","axios","put","objectSpread","articleId","then","res","modal","confirm","onOk","history","push","post","data","id","handleUpdate","handleChange","defineProperty","SimpleMDE","element","document","getElementById","childElementCount","autofocus","autosave","previewRender","translateMarkdown","location","get","_res$data","_this3","placeholder","Cate","defaultValue","es_button","back_top"],"mappings":"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","file":"static/js/10.29aba116.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { Input, Tooltip, Icon, Tag } from 'antd'\r\n\r\nclass SeleCate extends Component {\r\n  static propTypes = {\r\n    CommonlyList: PropTypes.array.isRequired\r\n  }\r\n\r\n  state = {\r\n    list: [],\r\n    inputVisible: false,\r\n    inputValue: ''\r\n  }\r\n\r\n  handleClose = removedTag => {\r\n    const list = this.state.list.filter(t => t !== removedTag)\r\n    this.setState({ list })\r\n  }\r\n\r\n  showInput = () => {\r\n    this.setState({ inputVisible: true }, () => this.input.focus())\r\n  }\r\n\r\n  handleInputChange = e => {\r\n    this.setState({ inputValue: e.target.value })\r\n  }\r\n\r\n  handleInputConfirm = () => {\r\n    let { inputValue, list } = this.state\r\n    const CommonlyList = this.props.CommonlyList\r\n\r\n    if (inputValue && !list.includes(inputValue) && !CommonlyList.includes(inputValue)) {\r\n      list = [...list, inputValue]\r\n    }\r\n    this.setState({\r\n      list,\r\n      inputVisible: false,\r\n      inputValue: ''\r\n    })\r\n  }\r\n\r\n  saveInputRef = input => (this.input = input)\r\n\r\n  render() {\r\n    const { list, inputVisible, inputValue } = this.state\r\n    return (\r\n      <Fragment>\r\n        {list.map((item, index) => {\r\n          const isLongTag = item.length > 20\r\n          const tagElem = (\r\n            <Tag key={item} closable afterClose={() => this.handleClose(item)} color=\"#1890ff\">\r\n              {isLongTag ? `${item.slice(0, 20)}...` : item}\r\n            </Tag>\r\n          )\r\n          return isLongTag ? (\r\n            <Tooltip title={item} key={item}>\r\n              {tagElem}\r\n            </Tooltip>\r\n          ) : (\r\n            tagElem\r\n          )\r\n        })}\r\n\r\n        {inputVisible && (\r\n          <Input\r\n            ref={this.saveInputRef}\r\n            type=\"text\"\r\n            size=\"small\"\r\n            style={{ width: 78 }}\r\n            value={inputValue}\r\n            onChange={this.handleInputChange}\r\n            onBlur={this.handleInputConfirm}\r\n            onPressEnter={this.handleInputConfirm}\r\n          />\r\n        )}\r\n\r\n        {!inputVisible && (\r\n          <Tag onClick={this.showInput} style={{ background: '#fff', borderStyle: 'dashed' }}>\r\n            <Icon type=\"plus\" /> New Tag\r\n          </Tag>\r\n        )}\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SeleCate\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { Tag } from 'antd'\r\n\r\nimport SelfCate from './SelfCate'\r\n\r\nconst CheckableTag = Tag.CheckableTag\r\n\r\n/**\r\n * 选择分类、标签的组件\r\n *\r\n * @class SelectCates\r\n * @extends {Component}\r\n */\r\n@connect(store => store.article)\r\nclass SelectCates extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    const { type, showNum } = this.props\r\n\r\n    let selectList\r\n\r\n    if (!this.props.isEdit) {\r\n      this.CommonlyList = this.getCommonlyList(this.props[`${type}List`], showNum)\r\n      selectList = this.CommonlyList[0] ? [this.CommonlyList[0]] : [] // 默认选中第一个  selectList = this.props.list\r\n    }\r\n\r\n    this.state = { selectList }\r\n  }\r\n\r\n  static propTypes = {\r\n    type: PropTypes.string.isRequired,\r\n    showNum: PropTypes.number,\r\n    list: PropTypes.array,\r\n    isEdit: PropTypes.bool\r\n  }\r\n\r\n  static defaultProps = {\r\n    type: 'tags',\r\n    showNum: 10\r\n  }\r\n\r\n  /**\r\n   * 获取常用的分类、标签列表\r\n   *\r\n   * @param {Array} list - 列表数据\r\n   * @param {Number} num - 获取的数量\r\n   */\r\n  getCommonlyList = (list, num = 10) => {\r\n    const sortList = list.sort((a, b) => b.count - a.count).map(d => d.name)\r\n    return sortList.slice(0, num)\r\n  }\r\n\r\n  // 行点击选中事件\r\n  handleSelect = (value, checked) => {\r\n    const { selectList } = this.state\r\n    const nextSelectList = checked ? [...selectList, value] : selectList.filter(t => t !== value)\r\n    this.setState({ selectList: nextSelectList })\r\n  }\r\n\r\n  // 获取最终结构\r\n  getResult = () => {\r\n    const { selectList } = this.state\r\n    const selfList = this.$selfCateRef.state.list\r\n    return [...selectList, ...selfList]\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.onRef && this.props.onRef(this)\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (this.props.list !== nextProps.list && nextProps.isEdit) {\r\n      this.setState({ selectList: nextProps.list })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { selectList } = this.state\r\n    const { type, isEdit } = this.props\r\n    return (\r\n      <div className=\"blog-formItem\">\r\n        <span className=\"label\">{type}: </span>\r\n\r\n        {isEdit\r\n          ? this.props.list.map((item, i) => (\r\n              <CheckableTag\r\n                key={item}\r\n                checked={selectList.includes(item)}\r\n                onChange={checked => this.handleSelect(item, checked)}>\r\n                {item}\r\n              </CheckableTag>\r\n            ))\r\n          : this.CommonlyList.map((item, i) => (\r\n              <CheckableTag\r\n                key={item}\r\n                checked={selectList.includes(item)}\r\n                onChange={checked => this.handleSelect(item, checked)}>\r\n                {item}\r\n              </CheckableTag>\r\n            ))}\r\n        <SelfCate CommonlyList={this.props.list} ref={el => (this.$selfCateRef = el)} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SelectCates\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport SimpleMDE from 'simplemde'\r\nimport 'simplemde/dist/simplemde.min.css'\r\nimport './index.less'\r\nimport { translateMarkdown } from '@/lib/index'\r\n\r\nimport { Button, Input, Modal, BackTop } from 'antd'\r\nimport SelectCate from './components/Cate'\r\n\r\n@connect(state => state.article)\r\nclass Edit extends Component {\r\n  state = {\r\n    value: '',\r\n    title: '',\r\n    tagList: [],\r\n    categoryList: [],\r\n    isEdit: false // 组件状态 更新或创建\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.smde = new SimpleMDE({\r\n      element: document.getElementById('editor').childElementCount,\r\n      autofocus: true,\r\n      autosave: true,\r\n      previewRender: translateMarkdown\r\n    })\r\n\r\n    if (this.props.history.location.state) {\r\n      const { articleId } = this.props.history.location.state\r\n      this.axios.get(`/article/get/${articleId}`).then(res => {\r\n        const { title, tags, categories, content } = res.data\r\n        this.smde.value(content)\r\n        const tagList = tags.map(d => d.name)\r\n        const categoryList = categories.map(d => d.name)\r\n        this.setState({ title, tagList, categoryList, isEdit: true, articleId })\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取常用的分类、标签列表\r\n   *\r\n   * @param {Array} list - 列表数据\r\n   * @param {Number} num - 获取的数量\r\n   */\r\n  getCommonlyList = (list, num = 10) => {\r\n    const sortList = list.sort((a, b) => b.count - a.count)\r\n    return sortList.slice(0, num)\r\n  }\r\n\r\n  handleSubmit = () => {\r\n    const tags = this.$tagRef.getResult()\r\n    const categories = this.$categoryRef.getResult()\r\n    let params = {\r\n      title: this.state.title,\r\n      content: this.smde.value(),\r\n      categories,\r\n      tags\r\n    }\r\n    if (this.state.isEdit) {\r\n      this.axios.put('/article/update', { ...params, articleId: this.state.articleId }).then(res => {\r\n        Modal.confirm({\r\n          title: '文章修改成功！是否查看详情？',\r\n          onOk: () => this.props.history.push(`/article/${this.state.articleId}`)\r\n        })\r\n      })\r\n    } else {\r\n      this.axios.post('/article/create', params).then(res => {\r\n        Modal.confirm({\r\n          title: '文章创建成功！是否立即查看？',\r\n          onOk: () => this.props.history.push(`/article/${res.data.id}`)\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n  handleUpdate = () => {}\r\n\r\n  handleChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n\r\n  render() {\r\n    const { title, value, categoryList, tagList, isEdit } = this.state\r\n    return (\r\n      <div className=\"edit\">\r\n        <div className=\"blog-formItem\">\r\n          <span className=\"label\">标题：</span>\r\n          <Input\r\n            placeholder=\"请输入文章标题\"\r\n            className=\"title-input\"\r\n            name=\"title\"\r\n            value={title}\r\n            onChange={this.handleChange}\r\n          />\r\n        </div>\r\n        <SelectCate\r\n          type=\"category\"\r\n          showNum={10}\r\n          onRef={el => (this.$categoryRef = el)}\r\n          list={categoryList}\r\n          isEdit={isEdit}\r\n        />\r\n        <SelectCate\r\n          type=\"tag\"\r\n          showNum={12}\r\n          onRef={el => (this.$tagRef = el)}\r\n          list={tagList}\r\n          isEdit={isEdit}\r\n        />\r\n        <br />\r\n        <textarea id=\"editor\" defaultValue={value} />\r\n        <Button onClick={this.handleSubmit} type=\"primary\">\r\n          {isEdit ? '更新' : '创建'}\r\n        </Button>\r\n        <BackTop />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Edit\r\n"],"sourceRoot":""}