{"version":3,"sources":["views/admin/article/manage/queryForm.jsx","views/admin/article/manage/index.jsx"],"names":["Option","date_picker","RangePicker","es_select","QueryForm","connect","state","article","getFormMeta","colon","elements","key","label","widget","react_default","a","createElement","input","placeholder","className","allowClear","_this","props","tagList","map","item","name","value","categoryList","handleSubmit","e","preventDefault","form","validateFieldsAndScroll","errors","values","console","log","getQuery","es_form","layout","onSubmit","this","FormBuilder","meta","es_button","type","htmlType","Component","queryForm","create","Manager","colorList","common","colorMap","list","pagination","total","loading","getColumns","title","dataIndex","render","text","record","d","tag","color","count","getCommentsCount","badge","style","backgroundColor","sorter","b","comments","moment","createdAt","isBefore","updatedAt","Link","to","concat","id","divider","pathname","articleId","onClick","handleDelete","fetchList","_ref","_ref$current","current","_ref$pageSize","pageSize","query","Object","objectWithoutProperties","setState","axios","get","params","objectSpread","page","then","res","rows","handleChange","modal","confirm","content","onOk","delete","code","message","success","_this2","_this$props","forEach","random","_this$state","table","rowKey","bordered","columns","dataSource","onChange"],"mappings":"2bASMA,GADcC,EAAA,EAAWC,YAChBC,EAAA,EAAOH,QAGhBI,EADLC,YAAQ,SAAAC,GAAK,OAAIA,EAAMC,uNAMtBC,YAAc,WACZ,MAAO,CACLC,OAAO,EACPC,SAAU,CACR,CACEC,IAAK,QACLC,MAAO,eACPC,OAAQC,EAAAC,EAAAC,cAAAC,EAAA,GAAOC,YAAY,gDAE7B,CACEP,IAAK,MACLC,MAAO,eACPC,OACEC,EAAAC,EAAAC,cAAAb,EAAA,GAAQgB,UAAU,cAAcC,YAAU,GACvCC,EAAKC,MAAMC,QAAQC,IAAI,SAAAC,GAAI,OAC1BX,EAAAC,EAAAC,cAAChB,EAAD,CAAQW,IAAKc,EAAKC,KAAMC,MAAOF,EAAKC,MACjCD,EAAKC,UAMhB,CACEf,IAAK,WACLC,MAAO,eACPC,OACEC,EAAAC,EAAAC,cAAAb,EAAA,GAAQgB,UAAU,cAAcC,YAAU,GACvCC,EAAKC,MAAMM,aAAaJ,IAAI,SAAAC,GAAI,OAC/BX,EAAAC,EAAAC,cAAChB,EAAD,CAAQW,IAAKc,EAAKC,KAAMC,MAAOF,EAAKC,MACjCD,EAAKC,eAuBtBG,aAAe,SAAAC,GACbA,EAAEC,iBACFV,EAAKC,MAAMU,KAAKC,wBAAwB,SAACC,EAAQC,GAC3CD,IACJE,QAAQC,IAAI,gBAAiBF,GAC7Bd,EAAKC,MAAMgB,SAASH,+EAKtB,OACErB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACbL,EAAAC,EAAAC,cAAAuB,EAAA,GAAMC,OAAO,SAASC,SAAUC,KAAKb,cACnCf,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAaC,KAAMF,KAAKlC,cAAewB,KAAMU,KAAKpB,MAAMU,MACtDlB,EAAAC,EAAAC,cAAA6B,EAAA,GAAQC,KAAK,UAAUC,SAAS,UAAhC,0BAvEYC,iBAiFTC,EAAAV,EAAA,EAAKW,QAAL,CAAc9C,GC9EvB+C,EAJL9C,YAAQ,SAAAC,GAAK,MAAK,CACjB8C,UAAW9C,EAAM+C,OAAOD,UACxB7B,QAASjB,EAAMC,QAAQgB,wNAGvBjB,MAAQ,CACNgD,SAAU,GACVC,KAAM,GACNC,WAAY,GACZC,MAAO,EACPC,SAAS,KAYXC,WAAa,WAEX,MAAO,CACL,CACEC,MAAO,eACPC,UAAW,SAEb,CACED,MAAO,eACPC,UAAW,OACXC,OAAQ,SAACC,EAAMC,GACb,OAAOD,EAAKvC,IAAI,SAAAyC,GAAC,OACfnD,EAAAC,EAAAC,cAAAkD,EAAA,GAAKC,MAAO9C,EAAKf,MAAMgD,SAASW,EAAEvC,MAAOf,IAAKsD,EAAEvC,MAC7CuC,EAAEvC,UAKX,CACEkC,MAAO,eACPC,UAAW,aACXC,OAAQ,SAACC,EAAMC,GACb,OAAOD,EAAKvC,IAAI,SAAAyC,GAAC,OACfnD,EAAAC,EAAAC,cAAAkD,EAAA,GAAKC,MAAO,UAAWxD,IAAKsD,EAAEvC,MAC3BuC,EAAEvC,UAKX,CACEkC,MAAO,qBACPC,UAAW,WACXC,OAAQ,SAAAC,GACN,IAAMK,EAAQC,YAAiBN,GAC/B,OAAiB,IAAVK,EAActD,EAAAC,EAAAC,cAAAsD,EAAA,GAAOF,MAAOA,EAAOG,MAAO,CAAEC,gBAAiB,aAAkBJ,GAExFK,OAAQ,SAAC1D,EAAG2D,GAAJ,OAAUL,YAAiBtD,EAAE4D,UAAYN,YAAiBK,EAAEC,YAEtE,CACEf,MAAO,2BACPC,UAAW,YACXY,OAAQ,SAAC1D,EAAG2D,GAAJ,OAAWE,IAAO7D,EAAE8D,WAAWC,SAASJ,EAAEG,WAAa,GAAK,IAEtE,CACEjB,MAAO,2BACPC,UAAW,YACXY,OAAQ,SAAC1D,EAAG2D,GAAJ,OAAWE,IAAO7D,EAAEgE,WAAWD,SAASJ,EAAEK,WAAa,GAAK,IAEtE,CACEnB,MAAO,eACPE,OAAQ,SAACC,EAAMC,GACb,OACElD,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UACbL,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAMC,GAAE,YAAAC,OAAclB,EAAOmB,KAA7B,gBACArE,EAAAC,EAAAC,cAAAoE,EAAA,GAAStC,KAAK,aAEdhC,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAMC,GAAI,CAAEI,SAAU,uBAAwB/E,MAAO,CAAEgF,UAAWtB,EAAOmB,MAAzE,gBACArE,EAAAC,EAAAC,cAAAoE,EAAA,GAAStC,KAAK,aACdhC,EAAAC,EAAAC,cAAA,QAAMG,UAAU,aAAaoE,QAAS,kBAAMlE,EAAKmE,aAAaxB,EAAOmB,GAAInB,EAAOJ,SAAhF,uBAUZ6B,UAAY,SAAAC,GAA8C,IAAAC,EAAAD,EAA3CE,eAA2C,IAAAD,EAAjC,EAAiCA,EAAAE,EAAAH,EAA9BI,gBAA8B,IAAAD,EAAnB,GAAmBA,EAAZE,EAAYC,OAAAC,EAAA,EAAAD,CAAAN,EAAA,wBACxDrE,EAAK6E,SAAS,CAAExC,SAAS,IAEzBrC,EAAK8E,MAAMC,IAAI,mBAAoB,CAAEC,OAAOL,OAAAM,EAAA,EAAAN,CAAA,CAAGO,KAAMX,EAASE,YAAaC,KAAWS,KAAK,SAAAC,GACzF,IAAMjD,EAAa,CACjBoC,UACAE,WACArC,MAAOgD,EAAIrC,OAEb/C,EAAK6E,SAAS,CAAE3C,KAAMkD,EAAIC,KAAMlD,aAAYE,SAAS,SAIzDiD,aAAe,SAAAnD,GACbnC,EAAKoE,UAALO,OAAAM,EAAA,EAAAN,CAAA,GAAoBxC,EAAenC,EAAKf,MAAMyF,WAMhDP,aAAe,SAACF,EAAW1B,GACzBgD,EAAA,EAAMC,QAAQ,CACZjD,MAAO,0GACPkD,QAAO,sBAAA5B,OAAStB,EAAT,KACPmD,KAAM,WACJ1F,EAAK8E,MAAMa,OAAO,kBAAmB,CAAEX,OAAQ,CAAEf,eAAekB,KAAK,SAAAC,GAClD,MAAbA,EAAIQ,OACN5F,EAAKoE,UAAUpE,EAAKf,MAAMkD,YAC1B0D,EAAA,EAAQC,QAAQV,EAAIS,kBAO9B5E,SAAW,SAAAyD,GACT1E,EAAK6E,SAAS,CAAEH,UAEhB1E,EAAKoE,UAALO,OAAAM,EAAA,EAAAN,CAAA,GAAoBD,EAApB,CAA2BH,QAAS,yFAnHlB,IAAAwB,EAAA1E,KAAA2E,EACa3E,KAAKpB,MAA5B8B,EADUiE,EACVjE,UAAW7B,EADD8F,EACC9F,QACf+B,EAAW,GACf/B,EAAQ+F,QAAQ,SAAA7F,GACd6B,EAAS7B,EAAKC,MAAQ0B,EAAUmE,YAAOnE,MAEzCV,KAAKwD,SAAS,CAAE5C,YAAY,kBAAM8D,EAAK3B,UAAU,CAAEc,KAAM,uCAgHlD,IAAAiB,EAC+B9E,KAAKpC,MAAnCiD,EADDiE,EACCjE,KAAMC,EADPgE,EACOhE,WAAYE,EADnB8D,EACmB9D,QAC1B,OACE5C,EAAAC,EAAAC,cAAA,OAAKG,UAAU,WACbL,EAAAC,EAAAC,cAACiC,EAAD,CAAWX,SAAUI,KAAKJ,WAC1BxB,EAAAC,EAAAC,cAAAyG,EAAA,GACEC,OAAO,KACPC,UAAQ,EACRjE,QAASA,EACTkE,QAASlF,KAAKiB,aACdkE,WAAYtE,EACZC,WAAYA,EACZsE,SAAUpF,KAAKiE,uBA3IH3D,iBAkJPG","file":"static/js/11.bff20ecd.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { Button, Form, Input, Select, DatePicker } from 'antd'\r\nimport FormBuilder from '@/components/helper/FormBuilder'\r\nimport { connect } from 'react-redux'\r\nimport moment from 'moment'\r\n\r\nconst RangePicker = DatePicker.RangePicker\r\nconst Option = Select.Option\r\n\r\n@connect(state => state.article)\r\nclass QueryForm extends Component {\r\n  static propTypes = {\r\n    getQuery: PropTypes.func.isRequired\r\n  }\r\n\r\n  getFormMeta = () => {\r\n    return {\r\n      colon: true,\r\n      elements: [\r\n        {\r\n          key: 'title',\r\n          label: '标题',\r\n          widget: <Input placeholder=\"请输入文章标题\" />\r\n        },\r\n        {\r\n          key: 'tag',\r\n          label: '标签',\r\n          widget: (\r\n            <Select className=\"form-select\" allowClear>\r\n              {this.props.tagList.map(item => (\r\n                <Option key={item.name} value={item.name}>\r\n                  {item.name}\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n          )\r\n        },\r\n        {\r\n          key: 'category',\r\n          label: '分类',\r\n          widget: (\r\n            <Select className=\"form-select\" allowClear>\r\n              {this.props.categoryList.map(item => (\r\n                <Option key={item.name} value={item.name}>\r\n                  {item.name}\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n          )\r\n        }\r\n        // {\r\n        //   key: 'rangTime',\r\n        //   label: '创建时间',\r\n        //   widget: (\r\n        //     <RangePicker\r\n        //       ranges={{\r\n        //         Today: [moment(), moment()],\r\n        //         'This Month': [moment().startOf('month'), moment().endOf('month')]\r\n        //       }}\r\n        //       format=\"YYYY/MM/DD HH:mm:ss\"\r\n        //     />\r\n        //   )\r\n        // }\r\n      ]\r\n    }\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault()\r\n    this.props.form.validateFieldsAndScroll((errors, values) => {\r\n      if (errors) return\r\n      console.log('submit form: ', values)\r\n      this.props.getQuery(values)\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"query-form\">\r\n        <Form layout=\"inline\" onSubmit={this.handleSubmit}>\r\n          <FormBuilder meta={this.getFormMeta()} form={this.props.form}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              检索\r\n            </Button>\r\n          </FormBuilder>\r\n        </Form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form.create()(QueryForm)\r\n","import React, { Component } from 'react'\r\nimport './index.less'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { random, getCommentsCount } from '@/lib'\r\nimport { Table, Divider, Tag, Modal, message, Badge } from 'antd'\r\nimport QueryForm from './queryForm'\r\nimport moment from 'moment'\r\n\r\n@connect(state => ({\r\n  colorList: state.common.colorList,\r\n  tagList: state.article.tagList\r\n}))\r\nclass Manager extends Component {\r\n  state = {\r\n    colorMap: {},\r\n    list: [],\r\n    pagination: {},\r\n    total: 0,\r\n    loading: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { colorList, tagList } = this.props\r\n    let colorMap = {}\r\n    tagList.forEach(item => {\r\n      colorMap[item.name] = colorList[random(colorList)]\r\n    })\r\n    this.setState({ colorMap }, () => this.fetchList({ page: 1 }))\r\n  }\r\n\r\n  getColumns = () => {\r\n    // const { colorMap } = this.state\r\n    return [\r\n      {\r\n        title: '标题',\r\n        dataIndex: 'title'\r\n      },\r\n      {\r\n        title: '标签',\r\n        dataIndex: 'tags',\r\n        render: (text, record) => {\r\n          return text.map(d => (\r\n            <Tag color={this.state.colorMap[d.name]} key={d.name}>\r\n              {d.name}\r\n            </Tag>\r\n          ))\r\n        }\r\n      },\r\n      {\r\n        title: '分类',\r\n        dataIndex: 'categories',\r\n        render: (text, record) => {\r\n          return text.map(d => (\r\n            <Tag color={'#2db7f5'} key={d.name}>\r\n              {d.name}\r\n            </Tag>\r\n          ))\r\n        }\r\n      },\r\n      {\r\n        title: '评论数',\r\n        dataIndex: 'comments',\r\n        render: text => {\r\n          const count = getCommentsCount(text)\r\n          return count !== 0 ? <Badge count={count} style={{ backgroundColor: '#52c41a' }} /> : count\r\n        },\r\n        sorter: (a, b) => getCommentsCount(a.comments) - getCommentsCount(b.comments)\r\n      },\r\n      {\r\n        title: '发布时间',\r\n        dataIndex: 'createdAt',\r\n        sorter: (a, b) => (moment(a.createdAt).isBefore(b.createdAt) ? 1 : -1)\r\n      },\r\n      {\r\n        title: '修改时间',\r\n        dataIndex: 'updatedAt',\r\n        sorter: (a, b) => (moment(a.updatedAt).isBefore(b.updatedAt) ? 1 : -1)\r\n      },\r\n      {\r\n        title: '操作',\r\n        render: (text, record) => {\r\n          return (\r\n            <div className=\"action\">\r\n              <Link to={`/article/${record.id}`}>查看</Link>\r\n              <Divider type=\"vertical\" />\r\n              {/* <span className=\"btn-edit\">编辑</span> */}\r\n              <Link to={{ pathname: '/admin/articles/edit', state: { articleId: record.id } }}>编辑</Link>\r\n              <Divider type=\"vertical\" />\r\n              <span className=\"btn-delete\" onClick={() => this.handleDelete(record.id, record.title)}>\r\n                删除\r\n              </span>\r\n            </div>\r\n          )\r\n        }\r\n      }\r\n    ]\r\n  }\r\n\r\n  fetchList = ({ current = 1, pageSize = 10, ...query }) => {\r\n    this.setState({ loading: true })\r\n\r\n    this.axios.get('/article/getList', { params: { page: current, pageSize, ...query } }).then(res => {\r\n      const pagination = {\r\n        current,\r\n        pageSize,\r\n        total: res.count\r\n      }\r\n      this.setState({ list: res.rows, pagination, loading: false })\r\n    })\r\n  }\r\n\r\n  handleChange = pagination => {\r\n    this.fetchList({ ...pagination, ...this.state.query })\r\n  }\r\n\r\n  /**\r\n   * @param {Number} - 文章 id\r\n   */\r\n  handleDelete = (articleId, title) => {\r\n    Modal.confirm({\r\n      title: '您确认删除该文章?，此操作不可恢复！',\r\n      content: `文章： ${title} `,\r\n      onOk: () => {\r\n        this.axios.delete('/article/delete', { params: { articleId } }).then(res => {\r\n          if (res.code === 200) {\r\n            this.fetchList(this.state.pagination)\r\n            message.success(res.message)\r\n          }\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  getQuery = query => {\r\n    this.setState({ query })\r\n\r\n    this.fetchList({ ...query, current: 1 })\r\n  }\r\n\r\n  render() {\r\n    const { list, pagination, loading } = this.state\r\n    return (\r\n      <div className=\"manager\">\r\n        <QueryForm getQuery={this.getQuery} />\r\n        <Table\r\n          rowKey=\"id\"\r\n          bordered\r\n          loading={loading}\r\n          columns={this.getColumns()}\r\n          dataSource={list}\r\n          pagination={pagination}\r\n          onChange={this.handleChange}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Manager\r\n"],"sourceRoot":""}